# Makefile.in generated by automake 1.16.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2018 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
subdir = src/gsm/phys
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_blas.m4 \
	$(top_srcdir)/m4/ax_check_compile_flags.m4 \
	$(top_srcdir)/m4/ax_compiler_vendor.m4 \
	$(top_srcdir)/m4/ax_fortran_utils.m4 \
	$(top_srcdir)/m4/ax_lib_comio.m4 \
	$(top_srcdir)/m4/ax_lib_esmf.m4 \
	$(top_srcdir)/m4/ax_lib_nemsio.m4 \
	$(top_srcdir)/m4/ax_lib_netcdf4.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LIBRARIES = $(noinst_LIBRARIES)
ARFLAGS = cru
AM_V_AR = $(am__v_AR_@AM_V@)
am__v_AR_ = $(am__v_AR_@AM_DEFAULT_V@)
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
libgfsphys_a_AR = $(AR) $(ARFLAGS)
libgfsphys_a_LIBADD =
am_libgfsphys_a_OBJECTS = libgfsphys_a-aoicpl_prep.$(OBJEXT) \
	libgfsphys_a-compns_physics.$(OBJEXT) \
	libgfsphys_a-coordinate_def.$(OBJEXT) \
	libgfsphys_a-coundummy.$(OBJEXT) \
	libgfsphys_a-d3d_def.$(OBJEXT) \
	libgfsphys_a-dfi_fixwr.$(OBJEXT) \
	libgfsphys_a-do_physics_one_step.$(OBJEXT) \
	libgfsphys_a-fix_fields.$(OBJEXT) \
	libgfsphys_a-fix_fields_idea_rst.$(OBJEXT) \
	libgfsphys_a-fld_collect.$(OBJEXT) \
	libgfsphys_a-fld_collect_nst.$(OBJEXT) \
	libgfsphys_a-gbphys_adv_hyb_gc.$(OBJEXT) \
	libgfsphys_a-gbphys_adv_hyb_gc_h.$(OBJEXT) \
	libgfsphys_a-gcycle.$(OBJEXT) \
	libgfsphys_a-getcon_physics.$(OBJEXT) \
	libgfsphys_a-get_lats_node_shuff_r_fix.$(OBJEXT) \
	libgfsphys_a-GFS_simple_scatter.$(OBJEXT) \
	libgfsphys_a-gg_def.$(OBJEXT) \
	libgfsphys_a-glats_physics.$(OBJEXT) \
	libgfsphys_a-gloopb.$(OBJEXT) libgfsphys_a-gloopr.$(OBJEXT) \
	libgfsphys_a-gribit_gsm.$(OBJEXT) \
	libgfsphys_a-hpmdummy.$(OBJEXT) libgfsphys_a-info.$(OBJEXT) \
	libgfsphys_a-lats_shuff.$(OBJEXT) \
	libgfsphys_a-layout1.$(OBJEXT) \
	libgfsphys_a-lon_lat_para.$(OBJEXT) \
	libgfsphys_a-mod_state.$(OBJEXT) \
	libgfsphys_a-mpi_def.$(OBJEXT) libgfsphys_a-mpi_quit.$(OBJEXT) \
	libgfsphys_a-namelist_physics_def.$(OBJEXT) \
	libgfsphys_a-para_fixio_w.$(OBJEXT) \
	libgfsphys_a-para_nst_w.$(OBJEXT) \
	libgfsphys_a-read_fix.$(OBJEXT) \
	libgfsphys_a-reduce_lons_grid_module.$(OBJEXT) \
	libgfsphys_a-resol_def.$(OBJEXT) \
	libgfsphys_a-setlats.$(OBJEXT) \
	libgfsphys_a-setlats_r_slg.$(OBJEXT) \
	libgfsphys_a-sortrx.$(OBJEXT) libgfsphys_a-vert_def.$(OBJEXT) \
	libgfsphys_a-wrt3d.$(OBJEXT) libgfsphys_a-wrt3d_hyb.$(OBJEXT) \
	libgfsphys_a-wrtout_physics.$(OBJEXT)
libgfsphys_a_OBJECTS = $(am_libgfsphys_a_OBJECTS)
libgfsphysf_a_AR = $(AR) $(ARFLAGS)
libgfsphysf_a_LIBADD =
am_libgfsphysf_a_OBJECTS = libgfsphysf_a-checkiauforcing.$(OBJEXT) \
	libgfsphysf_a-gfs_physics_add_get_state_ESMFField_mod.$(OBJEXT) \
	libgfsphysf_a-gfs_physics_aoi_var_mod.$(OBJEXT) \
	libgfsphysf_a-gfs_physics_err_msg_mod.$(OBJEXT) \
	libgfsphysf_a-gfs_physics_finalize_mod.$(OBJEXT) \
	libgfsphysf_a-gfs_physics_g2d_mod.$(OBJEXT) \
	libgfsphysf_a-gfs_physics_g3d_mod.$(OBJEXT) \
	libgfsphysf_a-gfs_physics_getcf_mod.$(OBJEXT) \
	libgfsphysf_a-gfs_physics_grid_comp_mod.$(OBJEXT) \
	libgfsphysf_a-gfs_physics_grid_create_mod.$(OBJEXT) \
	libgfsphysf_a-gfs_physics_gridgr_mod.$(OBJEXT) \
	libgfsphysf_a-gfs_physics_initialize_mod.$(OBJEXT) \
	libgfsphysf_a-gfs_physics_internal_state_mod.$(OBJEXT) \
	libgfsphysf_a-gfs_physics_namelist_mod.$(OBJEXT) \
	libgfsphysf_a-gfs_physics_nst_var_mod.$(OBJEXT) \
	libgfsphysf_a-gfs_physics_output.$(OBJEXT) \
	libgfsphysf_a-gfs_physics_run_mod.$(OBJEXT) \
	libgfsphysf_a-gfs_physics_sfc_flx_mod.$(OBJEXT) \
	libgfsphysf_a-gfs_physics_sfc_flx_set_mod.$(OBJEXT) \
	libgfsphysf_a-gfs_physics_start_time_get_mod.$(OBJEXT) \
	libgfsphysf_a-gfs_phy_states_mod.$(OBJEXT) \
	libgfsphysf_a-nstio_module.$(OBJEXT) \
	libgfsphysf_a-sfcio_module.$(OBJEXT) \
	libgfsphysf_a-wam_ifp_class.$(OBJEXT) \
	libgfsphysf_a-wam_ifp_mod.$(OBJEXT)
libgfsphysf_a_OBJECTS = $(am_libgfsphysf_a_OBJECTS)
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
F77COMPILE = $(F77) $(AM_FFLAGS) $(FFLAGS)
AM_V_F77 = $(am__v_F77_@AM_V@)
am__v_F77_ = $(am__v_F77_@AM_DEFAULT_V@)
am__v_F77_0 = @echo "  F77     " $@;
am__v_F77_1 = 
F77LD = $(F77)
F77LINK = $(F77LD) $(AM_FFLAGS) $(FFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o \
	$@
AM_V_F77LD = $(am__v_F77LD_@AM_V@)
am__v_F77LD_ = $(am__v_F77LD_@AM_DEFAULT_V@)
am__v_F77LD_0 = @echo "  F77LD   " $@;
am__v_F77LD_1 = 
SOURCES = $(libgfsphys_a_SOURCES) $(libgfsphysf_a_SOURCES)
DIST_SOURCES = $(libgfsphys_a_SOURCES) $(libgfsphysf_a_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BLAS_LIBS = @BLAS_LIBS@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
COMIO_CONFIG = @COMIO_CONFIG@
COMIO_FC = @COMIO_FC@
COMIO_FFLAGS = @COMIO_FFLAGS@
COMIO_FLIBS = @COMIO_FLIBS@
COMIO_LDFLAGS = @COMIO_LDFLAGS@
COMIO_VERSION = @COMIO_VERSION@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEFS_PHYS = @DEFS_PHYS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
ESMFMKFILE = @ESMFMKFILE@
ESMF_FC = @ESMF_FC@
ESMF_FCFLAGS = @ESMF_FCFLAGS@
ESMF_FLIBS = @ESMF_FLIBS@
ESMF_LDFLAGS = @ESMF_LDFLAGS@
ESMF_LIBS = @ESMF_LIBS@
EXEEXT = @EXEEXT@
F77 = @F77@
FC = @FC@
FCFLAGS = @FCFLAGS@
FCFLAGS_F = @FCFLAGS_F@
FCFLAGS_F90 = @FCFLAGS_F90@
FCFLAGS_FIXED = @FCFLAGS_FIXED@
FCFLAGS_FREE = @FCFLAGS_FREE@
FCFLAGS_f = @FCFLAGS_f@
FCLIBS = @FCLIBS@
FC_AUTODOUBLE = @FC_AUTODOUBLE@
FC_DEFINE = @FC_DEFINE@
FC_LINE_LENGTH = @FC_LINE_LENGTH@
FC_MODEXT = @FC_MODEXT@
FC_MODINC = @FC_MODINC@
FFLAGS = @FFLAGS@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
NC_CONFIG = @NC_CONFIG@
NEMSIO_FCFLAGS = @NEMSIO_FCFLAGS@
NEMSIO_FLIBS = @NEMSIO_FLIBS@
NEMSIO_LDFLAGS = @NEMSIO_LDFLAGS@
NEMSIO_LIBS = @NEMSIO_LIBS@
NEMSIO_VERSION = @NEMSIO_VERSION@
NETCDF4_CC = @NETCDF4_CC@
NETCDF4_CFLAGS = @NETCDF4_CFLAGS@
NETCDF4_FC = @NETCDF4_FC@
NETCDF4_FFLAGS = @NETCDF4_FFLAGS@
NETCDF4_FLIBS = @NETCDF4_FLIBS@
NETCDF4_LDFLAGS = @NETCDF4_LDFLAGS@
NETCDF4_LIBS = @NETCDF4_LIBS@
NETCDF4_VERSION = @NETCDF4_VERSION@
OBJEXT = @OBJEXT@
OPENMP_FCFLAGS = @OPENMP_FCFLAGS@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
WAM_DEP_LINK_OBJS = @WAM_DEP_LINK_OBJS@
WAM_DEP_SHRD_LIBS = @WAM_DEP_SHRD_LIBS@
WAM_DEP_SHRD_PATH = @WAM_DEP_SHRD_PATH@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_F77 = @ac_ct_F77@
ac_ct_FC = @ac_ct_FC@
ac_empty = @ac_empty@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
noinst_LIBRARIES = libgfsphysf.a libgfsphys.a
libgfsphys_a_FFLAGS = $(FC_MODINC) ../libutil $(FC_MODINC) ../dyn \
	$(FC_MODINC) ../../phys $(FC_MODINC) ../../share \
	$(FC_AUTODOUBLE) $(FCFLAGS_FIXED)
libgfsphys_a_SOURCES = aoicpl_prep.f compns_physics.f coordinate_def.f \
	coundummy.f d3d_def.f dfi_fixwr.f do_physics_one_step.f fix_fields.f fix_fields_idea_rst.f \
	fld_collect.f fld_collect_nst.f gbphys_adv_hyb_gc.f gbphys_adv_hyb_gc_h.f gcycle.f \
	getcon_physics.f get_lats_node_shuff_r_fix.f GFS_simple_scatter.f gg_def.f \
	glats_physics.f gloopb.f gloopr.f gribit_gsm.f hpmdummy.f info.f lats_shuff.f layout1.f \
	lon_lat_para.f mod_state.f mpi_def.f mpi_quit.f namelist_physics_def.f \
	para_fixio_w.f para_nst_w.f read_fix.f reduce_lons_grid_module.f \
	resol_def.f setlats.f setlats_r_slg.f sortrx.f vert_def.f wrt3d.f \
	wrt3d_hyb.f wrtout_physics.f

libgfsphysf_a_FFLAGS = -I $(top_srcdir)/include $(FC_MODINC) \
	../libutil $(FC_MODINC) ../dyn $(FC_MODINC) ../../phys \
	$(FC_MODINC) ../../share $(FC_AUTODOUBLE) $(FCFLAGS_FREE)
libgfsphysf_a_SOURCES = checkiauforcing.f gfs_physics_add_get_state_ESMFField_mod.f \
	gfs_physics_aoi_var_mod.f gfs_physics_err_msg_mod.f gfs_physics_finalize_mod.f \
	gfs_physics_g2d_mod.f gfs_physics_g3d_mod.f gfs_physics_getcf_mod.f gfs_physics_grid_comp_mod.f \
	gfs_physics_grid_create_mod.f gfs_physics_gridgr_mod.f gfs_physics_initialize_mod.f \
	gfs_physics_internal_state_mod.f gfs_physics_namelist_mod.f gfs_physics_nst_var_mod.f \
	gfs_physics_output.f gfs_physics_run_mod.f gfs_physics_sfc_flx_mod.f gfs_physics_sfc_flx_set_mod.f \
	gfs_physics_start_time_get_mod.f gfs_phy_states_mod.f nstio_module.f sfcio_module.f \
	wam_ifp_class.f wam_ifp_mod.f

all: all-am

.SUFFIXES:
.SUFFIXES: .f .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/gsm/phys/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/gsm/phys/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)

libgfsphys.a: $(libgfsphys_a_OBJECTS) $(libgfsphys_a_DEPENDENCIES) $(EXTRA_libgfsphys_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libgfsphys.a
	$(AM_V_AR)$(libgfsphys_a_AR) libgfsphys.a $(libgfsphys_a_OBJECTS) $(libgfsphys_a_LIBADD)
	$(AM_V_at)$(RANLIB) libgfsphys.a

libgfsphysf.a: $(libgfsphysf_a_OBJECTS) $(libgfsphysf_a_DEPENDENCIES) $(EXTRA_libgfsphysf_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libgfsphysf.a
	$(AM_V_AR)$(libgfsphysf_a_AR) libgfsphysf.a $(libgfsphysf_a_OBJECTS) $(libgfsphysf_a_LIBADD)
	$(AM_V_at)$(RANLIB) libgfsphysf.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

.f.o:
	$(AM_V_F77)$(F77COMPILE) -c -o $@ $<

.f.obj:
	$(AM_V_F77)$(F77COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

libgfsphys_a-aoicpl_prep.o: aoicpl_prep.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-aoicpl_prep.o `test -f 'aoicpl_prep.f' || echo '$(srcdir)/'`aoicpl_prep.f

libgfsphys_a-aoicpl_prep.obj: aoicpl_prep.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-aoicpl_prep.obj `if test -f 'aoicpl_prep.f'; then $(CYGPATH_W) 'aoicpl_prep.f'; else $(CYGPATH_W) '$(srcdir)/aoicpl_prep.f'; fi`

libgfsphys_a-compns_physics.o: compns_physics.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-compns_physics.o `test -f 'compns_physics.f' || echo '$(srcdir)/'`compns_physics.f

libgfsphys_a-compns_physics.obj: compns_physics.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-compns_physics.obj `if test -f 'compns_physics.f'; then $(CYGPATH_W) 'compns_physics.f'; else $(CYGPATH_W) '$(srcdir)/compns_physics.f'; fi`

libgfsphys_a-coordinate_def.o: coordinate_def.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-coordinate_def.o `test -f 'coordinate_def.f' || echo '$(srcdir)/'`coordinate_def.f

libgfsphys_a-coordinate_def.obj: coordinate_def.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-coordinate_def.obj `if test -f 'coordinate_def.f'; then $(CYGPATH_W) 'coordinate_def.f'; else $(CYGPATH_W) '$(srcdir)/coordinate_def.f'; fi`

libgfsphys_a-coundummy.o: coundummy.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-coundummy.o `test -f 'coundummy.f' || echo '$(srcdir)/'`coundummy.f

libgfsphys_a-coundummy.obj: coundummy.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-coundummy.obj `if test -f 'coundummy.f'; then $(CYGPATH_W) 'coundummy.f'; else $(CYGPATH_W) '$(srcdir)/coundummy.f'; fi`

libgfsphys_a-d3d_def.o: d3d_def.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-d3d_def.o `test -f 'd3d_def.f' || echo '$(srcdir)/'`d3d_def.f

libgfsphys_a-d3d_def.obj: d3d_def.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-d3d_def.obj `if test -f 'd3d_def.f'; then $(CYGPATH_W) 'd3d_def.f'; else $(CYGPATH_W) '$(srcdir)/d3d_def.f'; fi`

libgfsphys_a-dfi_fixwr.o: dfi_fixwr.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-dfi_fixwr.o `test -f 'dfi_fixwr.f' || echo '$(srcdir)/'`dfi_fixwr.f

libgfsphys_a-dfi_fixwr.obj: dfi_fixwr.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-dfi_fixwr.obj `if test -f 'dfi_fixwr.f'; then $(CYGPATH_W) 'dfi_fixwr.f'; else $(CYGPATH_W) '$(srcdir)/dfi_fixwr.f'; fi`

libgfsphys_a-do_physics_one_step.o: do_physics_one_step.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-do_physics_one_step.o `test -f 'do_physics_one_step.f' || echo '$(srcdir)/'`do_physics_one_step.f

libgfsphys_a-do_physics_one_step.obj: do_physics_one_step.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-do_physics_one_step.obj `if test -f 'do_physics_one_step.f'; then $(CYGPATH_W) 'do_physics_one_step.f'; else $(CYGPATH_W) '$(srcdir)/do_physics_one_step.f'; fi`

libgfsphys_a-fix_fields.o: fix_fields.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-fix_fields.o `test -f 'fix_fields.f' || echo '$(srcdir)/'`fix_fields.f

libgfsphys_a-fix_fields.obj: fix_fields.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-fix_fields.obj `if test -f 'fix_fields.f'; then $(CYGPATH_W) 'fix_fields.f'; else $(CYGPATH_W) '$(srcdir)/fix_fields.f'; fi`

libgfsphys_a-fix_fields_idea_rst.o: fix_fields_idea_rst.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-fix_fields_idea_rst.o `test -f 'fix_fields_idea_rst.f' || echo '$(srcdir)/'`fix_fields_idea_rst.f

libgfsphys_a-fix_fields_idea_rst.obj: fix_fields_idea_rst.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-fix_fields_idea_rst.obj `if test -f 'fix_fields_idea_rst.f'; then $(CYGPATH_W) 'fix_fields_idea_rst.f'; else $(CYGPATH_W) '$(srcdir)/fix_fields_idea_rst.f'; fi`

libgfsphys_a-fld_collect.o: fld_collect.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-fld_collect.o `test -f 'fld_collect.f' || echo '$(srcdir)/'`fld_collect.f

libgfsphys_a-fld_collect.obj: fld_collect.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-fld_collect.obj `if test -f 'fld_collect.f'; then $(CYGPATH_W) 'fld_collect.f'; else $(CYGPATH_W) '$(srcdir)/fld_collect.f'; fi`

libgfsphys_a-fld_collect_nst.o: fld_collect_nst.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-fld_collect_nst.o `test -f 'fld_collect_nst.f' || echo '$(srcdir)/'`fld_collect_nst.f

libgfsphys_a-fld_collect_nst.obj: fld_collect_nst.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-fld_collect_nst.obj `if test -f 'fld_collect_nst.f'; then $(CYGPATH_W) 'fld_collect_nst.f'; else $(CYGPATH_W) '$(srcdir)/fld_collect_nst.f'; fi`

libgfsphys_a-gbphys_adv_hyb_gc.o: gbphys_adv_hyb_gc.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-gbphys_adv_hyb_gc.o `test -f 'gbphys_adv_hyb_gc.f' || echo '$(srcdir)/'`gbphys_adv_hyb_gc.f

libgfsphys_a-gbphys_adv_hyb_gc.obj: gbphys_adv_hyb_gc.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-gbphys_adv_hyb_gc.obj `if test -f 'gbphys_adv_hyb_gc.f'; then $(CYGPATH_W) 'gbphys_adv_hyb_gc.f'; else $(CYGPATH_W) '$(srcdir)/gbphys_adv_hyb_gc.f'; fi`

libgfsphys_a-gbphys_adv_hyb_gc_h.o: gbphys_adv_hyb_gc_h.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-gbphys_adv_hyb_gc_h.o `test -f 'gbphys_adv_hyb_gc_h.f' || echo '$(srcdir)/'`gbphys_adv_hyb_gc_h.f

libgfsphys_a-gbphys_adv_hyb_gc_h.obj: gbphys_adv_hyb_gc_h.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-gbphys_adv_hyb_gc_h.obj `if test -f 'gbphys_adv_hyb_gc_h.f'; then $(CYGPATH_W) 'gbphys_adv_hyb_gc_h.f'; else $(CYGPATH_W) '$(srcdir)/gbphys_adv_hyb_gc_h.f'; fi`

libgfsphys_a-gcycle.o: gcycle.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-gcycle.o `test -f 'gcycle.f' || echo '$(srcdir)/'`gcycle.f

libgfsphys_a-gcycle.obj: gcycle.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-gcycle.obj `if test -f 'gcycle.f'; then $(CYGPATH_W) 'gcycle.f'; else $(CYGPATH_W) '$(srcdir)/gcycle.f'; fi`

libgfsphys_a-getcon_physics.o: getcon_physics.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-getcon_physics.o `test -f 'getcon_physics.f' || echo '$(srcdir)/'`getcon_physics.f

libgfsphys_a-getcon_physics.obj: getcon_physics.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-getcon_physics.obj `if test -f 'getcon_physics.f'; then $(CYGPATH_W) 'getcon_physics.f'; else $(CYGPATH_W) '$(srcdir)/getcon_physics.f'; fi`

libgfsphys_a-get_lats_node_shuff_r_fix.o: get_lats_node_shuff_r_fix.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-get_lats_node_shuff_r_fix.o `test -f 'get_lats_node_shuff_r_fix.f' || echo '$(srcdir)/'`get_lats_node_shuff_r_fix.f

libgfsphys_a-get_lats_node_shuff_r_fix.obj: get_lats_node_shuff_r_fix.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-get_lats_node_shuff_r_fix.obj `if test -f 'get_lats_node_shuff_r_fix.f'; then $(CYGPATH_W) 'get_lats_node_shuff_r_fix.f'; else $(CYGPATH_W) '$(srcdir)/get_lats_node_shuff_r_fix.f'; fi`

libgfsphys_a-GFS_simple_scatter.o: GFS_simple_scatter.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-GFS_simple_scatter.o `test -f 'GFS_simple_scatter.f' || echo '$(srcdir)/'`GFS_simple_scatter.f

libgfsphys_a-GFS_simple_scatter.obj: GFS_simple_scatter.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-GFS_simple_scatter.obj `if test -f 'GFS_simple_scatter.f'; then $(CYGPATH_W) 'GFS_simple_scatter.f'; else $(CYGPATH_W) '$(srcdir)/GFS_simple_scatter.f'; fi`

libgfsphys_a-gg_def.o: gg_def.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-gg_def.o `test -f 'gg_def.f' || echo '$(srcdir)/'`gg_def.f

libgfsphys_a-gg_def.obj: gg_def.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-gg_def.obj `if test -f 'gg_def.f'; then $(CYGPATH_W) 'gg_def.f'; else $(CYGPATH_W) '$(srcdir)/gg_def.f'; fi`

libgfsphys_a-glats_physics.o: glats_physics.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-glats_physics.o `test -f 'glats_physics.f' || echo '$(srcdir)/'`glats_physics.f

libgfsphys_a-glats_physics.obj: glats_physics.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-glats_physics.obj `if test -f 'glats_physics.f'; then $(CYGPATH_W) 'glats_physics.f'; else $(CYGPATH_W) '$(srcdir)/glats_physics.f'; fi`

libgfsphys_a-gloopb.o: gloopb.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-gloopb.o `test -f 'gloopb.f' || echo '$(srcdir)/'`gloopb.f

libgfsphys_a-gloopb.obj: gloopb.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-gloopb.obj `if test -f 'gloopb.f'; then $(CYGPATH_W) 'gloopb.f'; else $(CYGPATH_W) '$(srcdir)/gloopb.f'; fi`

libgfsphys_a-gloopr.o: gloopr.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-gloopr.o `test -f 'gloopr.f' || echo '$(srcdir)/'`gloopr.f

libgfsphys_a-gloopr.obj: gloopr.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-gloopr.obj `if test -f 'gloopr.f'; then $(CYGPATH_W) 'gloopr.f'; else $(CYGPATH_W) '$(srcdir)/gloopr.f'; fi`

libgfsphys_a-gribit_gsm.o: gribit_gsm.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-gribit_gsm.o `test -f 'gribit_gsm.f' || echo '$(srcdir)/'`gribit_gsm.f

libgfsphys_a-gribit_gsm.obj: gribit_gsm.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-gribit_gsm.obj `if test -f 'gribit_gsm.f'; then $(CYGPATH_W) 'gribit_gsm.f'; else $(CYGPATH_W) '$(srcdir)/gribit_gsm.f'; fi`

libgfsphys_a-hpmdummy.o: hpmdummy.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-hpmdummy.o `test -f 'hpmdummy.f' || echo '$(srcdir)/'`hpmdummy.f

libgfsphys_a-hpmdummy.obj: hpmdummy.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-hpmdummy.obj `if test -f 'hpmdummy.f'; then $(CYGPATH_W) 'hpmdummy.f'; else $(CYGPATH_W) '$(srcdir)/hpmdummy.f'; fi`

libgfsphys_a-info.o: info.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-info.o `test -f 'info.f' || echo '$(srcdir)/'`info.f

libgfsphys_a-info.obj: info.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-info.obj `if test -f 'info.f'; then $(CYGPATH_W) 'info.f'; else $(CYGPATH_W) '$(srcdir)/info.f'; fi`

libgfsphys_a-lats_shuff.o: lats_shuff.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-lats_shuff.o `test -f 'lats_shuff.f' || echo '$(srcdir)/'`lats_shuff.f

libgfsphys_a-lats_shuff.obj: lats_shuff.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-lats_shuff.obj `if test -f 'lats_shuff.f'; then $(CYGPATH_W) 'lats_shuff.f'; else $(CYGPATH_W) '$(srcdir)/lats_shuff.f'; fi`

libgfsphys_a-layout1.o: layout1.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-layout1.o `test -f 'layout1.f' || echo '$(srcdir)/'`layout1.f

libgfsphys_a-layout1.obj: layout1.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-layout1.obj `if test -f 'layout1.f'; then $(CYGPATH_W) 'layout1.f'; else $(CYGPATH_W) '$(srcdir)/layout1.f'; fi`

libgfsphys_a-lon_lat_para.o: lon_lat_para.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-lon_lat_para.o `test -f 'lon_lat_para.f' || echo '$(srcdir)/'`lon_lat_para.f

libgfsphys_a-lon_lat_para.obj: lon_lat_para.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-lon_lat_para.obj `if test -f 'lon_lat_para.f'; then $(CYGPATH_W) 'lon_lat_para.f'; else $(CYGPATH_W) '$(srcdir)/lon_lat_para.f'; fi`

libgfsphys_a-mod_state.o: mod_state.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-mod_state.o `test -f 'mod_state.f' || echo '$(srcdir)/'`mod_state.f

libgfsphys_a-mod_state.obj: mod_state.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-mod_state.obj `if test -f 'mod_state.f'; then $(CYGPATH_W) 'mod_state.f'; else $(CYGPATH_W) '$(srcdir)/mod_state.f'; fi`

libgfsphys_a-mpi_def.o: mpi_def.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-mpi_def.o `test -f 'mpi_def.f' || echo '$(srcdir)/'`mpi_def.f

libgfsphys_a-mpi_def.obj: mpi_def.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-mpi_def.obj `if test -f 'mpi_def.f'; then $(CYGPATH_W) 'mpi_def.f'; else $(CYGPATH_W) '$(srcdir)/mpi_def.f'; fi`

libgfsphys_a-mpi_quit.o: mpi_quit.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-mpi_quit.o `test -f 'mpi_quit.f' || echo '$(srcdir)/'`mpi_quit.f

libgfsphys_a-mpi_quit.obj: mpi_quit.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-mpi_quit.obj `if test -f 'mpi_quit.f'; then $(CYGPATH_W) 'mpi_quit.f'; else $(CYGPATH_W) '$(srcdir)/mpi_quit.f'; fi`

libgfsphys_a-namelist_physics_def.o: namelist_physics_def.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-namelist_physics_def.o `test -f 'namelist_physics_def.f' || echo '$(srcdir)/'`namelist_physics_def.f

libgfsphys_a-namelist_physics_def.obj: namelist_physics_def.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-namelist_physics_def.obj `if test -f 'namelist_physics_def.f'; then $(CYGPATH_W) 'namelist_physics_def.f'; else $(CYGPATH_W) '$(srcdir)/namelist_physics_def.f'; fi`

libgfsphys_a-para_fixio_w.o: para_fixio_w.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-para_fixio_w.o `test -f 'para_fixio_w.f' || echo '$(srcdir)/'`para_fixio_w.f

libgfsphys_a-para_fixio_w.obj: para_fixio_w.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-para_fixio_w.obj `if test -f 'para_fixio_w.f'; then $(CYGPATH_W) 'para_fixio_w.f'; else $(CYGPATH_W) '$(srcdir)/para_fixio_w.f'; fi`

libgfsphys_a-para_nst_w.o: para_nst_w.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-para_nst_w.o `test -f 'para_nst_w.f' || echo '$(srcdir)/'`para_nst_w.f

libgfsphys_a-para_nst_w.obj: para_nst_w.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-para_nst_w.obj `if test -f 'para_nst_w.f'; then $(CYGPATH_W) 'para_nst_w.f'; else $(CYGPATH_W) '$(srcdir)/para_nst_w.f'; fi`

libgfsphys_a-read_fix.o: read_fix.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-read_fix.o `test -f 'read_fix.f' || echo '$(srcdir)/'`read_fix.f

libgfsphys_a-read_fix.obj: read_fix.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-read_fix.obj `if test -f 'read_fix.f'; then $(CYGPATH_W) 'read_fix.f'; else $(CYGPATH_W) '$(srcdir)/read_fix.f'; fi`

libgfsphys_a-reduce_lons_grid_module.o: reduce_lons_grid_module.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-reduce_lons_grid_module.o `test -f 'reduce_lons_grid_module.f' || echo '$(srcdir)/'`reduce_lons_grid_module.f

libgfsphys_a-reduce_lons_grid_module.obj: reduce_lons_grid_module.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-reduce_lons_grid_module.obj `if test -f 'reduce_lons_grid_module.f'; then $(CYGPATH_W) 'reduce_lons_grid_module.f'; else $(CYGPATH_W) '$(srcdir)/reduce_lons_grid_module.f'; fi`

libgfsphys_a-resol_def.o: resol_def.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-resol_def.o `test -f 'resol_def.f' || echo '$(srcdir)/'`resol_def.f

libgfsphys_a-resol_def.obj: resol_def.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-resol_def.obj `if test -f 'resol_def.f'; then $(CYGPATH_W) 'resol_def.f'; else $(CYGPATH_W) '$(srcdir)/resol_def.f'; fi`

libgfsphys_a-setlats.o: setlats.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-setlats.o `test -f 'setlats.f' || echo '$(srcdir)/'`setlats.f

libgfsphys_a-setlats.obj: setlats.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-setlats.obj `if test -f 'setlats.f'; then $(CYGPATH_W) 'setlats.f'; else $(CYGPATH_W) '$(srcdir)/setlats.f'; fi`

libgfsphys_a-setlats_r_slg.o: setlats_r_slg.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-setlats_r_slg.o `test -f 'setlats_r_slg.f' || echo '$(srcdir)/'`setlats_r_slg.f

libgfsphys_a-setlats_r_slg.obj: setlats_r_slg.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-setlats_r_slg.obj `if test -f 'setlats_r_slg.f'; then $(CYGPATH_W) 'setlats_r_slg.f'; else $(CYGPATH_W) '$(srcdir)/setlats_r_slg.f'; fi`

libgfsphys_a-sortrx.o: sortrx.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-sortrx.o `test -f 'sortrx.f' || echo '$(srcdir)/'`sortrx.f

libgfsphys_a-sortrx.obj: sortrx.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-sortrx.obj `if test -f 'sortrx.f'; then $(CYGPATH_W) 'sortrx.f'; else $(CYGPATH_W) '$(srcdir)/sortrx.f'; fi`

libgfsphys_a-vert_def.o: vert_def.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-vert_def.o `test -f 'vert_def.f' || echo '$(srcdir)/'`vert_def.f

libgfsphys_a-vert_def.obj: vert_def.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-vert_def.obj `if test -f 'vert_def.f'; then $(CYGPATH_W) 'vert_def.f'; else $(CYGPATH_W) '$(srcdir)/vert_def.f'; fi`

libgfsphys_a-wrt3d.o: wrt3d.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-wrt3d.o `test -f 'wrt3d.f' || echo '$(srcdir)/'`wrt3d.f

libgfsphys_a-wrt3d.obj: wrt3d.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-wrt3d.obj `if test -f 'wrt3d.f'; then $(CYGPATH_W) 'wrt3d.f'; else $(CYGPATH_W) '$(srcdir)/wrt3d.f'; fi`

libgfsphys_a-wrt3d_hyb.o: wrt3d_hyb.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-wrt3d_hyb.o `test -f 'wrt3d_hyb.f' || echo '$(srcdir)/'`wrt3d_hyb.f

libgfsphys_a-wrt3d_hyb.obj: wrt3d_hyb.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-wrt3d_hyb.obj `if test -f 'wrt3d_hyb.f'; then $(CYGPATH_W) 'wrt3d_hyb.f'; else $(CYGPATH_W) '$(srcdir)/wrt3d_hyb.f'; fi`

libgfsphys_a-wrtout_physics.o: wrtout_physics.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-wrtout_physics.o `test -f 'wrtout_physics.f' || echo '$(srcdir)/'`wrtout_physics.f

libgfsphys_a-wrtout_physics.obj: wrtout_physics.f
	$(AM_V_F77)$(F77) $(libgfsphys_a_FFLAGS) $(FFLAGS) -c -o libgfsphys_a-wrtout_physics.obj `if test -f 'wrtout_physics.f'; then $(CYGPATH_W) 'wrtout_physics.f'; else $(CYGPATH_W) '$(srcdir)/wrtout_physics.f'; fi`

libgfsphysf_a-checkiauforcing.o: checkiauforcing.f
	$(AM_V_F77)$(F77) $(libgfsphysf_a_FFLAGS) $(FFLAGS) -c -o libgfsphysf_a-checkiauforcing.o `test -f 'checkiauforcing.f' || echo '$(srcdir)/'`checkiauforcing.f

libgfsphysf_a-checkiauforcing.obj: checkiauforcing.f
	$(AM_V_F77)$(F77) $(libgfsphysf_a_FFLAGS) $(FFLAGS) -c -o libgfsphysf_a-checkiauforcing.obj `if test -f 'checkiauforcing.f'; then $(CYGPATH_W) 'checkiauforcing.f'; else $(CYGPATH_W) '$(srcdir)/checkiauforcing.f'; fi`

libgfsphysf_a-gfs_physics_add_get_state_ESMFField_mod.o: gfs_physics_add_get_state_ESMFField_mod.f
	$(AM_V_F77)$(F77) $(libgfsphysf_a_FFLAGS) $(FFLAGS) -c -o libgfsphysf_a-gfs_physics_add_get_state_ESMFField_mod.o `test -f 'gfs_physics_add_get_state_ESMFField_mod.f' || echo '$(srcdir)/'`gfs_physics_add_get_state_ESMFField_mod.f

libgfsphysf_a-gfs_physics_add_get_state_ESMFField_mod.obj: gfs_physics_add_get_state_ESMFField_mod.f
	$(AM_V_F77)$(F77) $(libgfsphysf_a_FFLAGS) $(FFLAGS) -c -o libgfsphysf_a-gfs_physics_add_get_state_ESMFField_mod.obj `if test -f 'gfs_physics_add_get_state_ESMFField_mod.f'; then $(CYGPATH_W) 'gfs_physics_add_get_state_ESMFField_mod.f'; else $(CYGPATH_W) '$(srcdir)/gfs_physics_add_get_state_ESMFField_mod.f'; fi`

libgfsphysf_a-gfs_physics_aoi_var_mod.o: gfs_physics_aoi_var_mod.f
	$(AM_V_F77)$(F77) $(libgfsphysf_a_FFLAGS) $(FFLAGS) -c -o libgfsphysf_a-gfs_physics_aoi_var_mod.o `test -f 'gfs_physics_aoi_var_mod.f' || echo '$(srcdir)/'`gfs_physics_aoi_var_mod.f

libgfsphysf_a-gfs_physics_aoi_var_mod.obj: gfs_physics_aoi_var_mod.f
	$(AM_V_F77)$(F77) $(libgfsphysf_a_FFLAGS) $(FFLAGS) -c -o libgfsphysf_a-gfs_physics_aoi_var_mod.obj `if test -f 'gfs_physics_aoi_var_mod.f'; then $(CYGPATH_W) 'gfs_physics_aoi_var_mod.f'; else $(CYGPATH_W) '$(srcdir)/gfs_physics_aoi_var_mod.f'; fi`

libgfsphysf_a-gfs_physics_err_msg_mod.o: gfs_physics_err_msg_mod.f
	$(AM_V_F77)$(F77) $(libgfsphysf_a_FFLAGS) $(FFLAGS) -c -o libgfsphysf_a-gfs_physics_err_msg_mod.o `test -f 'gfs_physics_err_msg_mod.f' || echo '$(srcdir)/'`gfs_physics_err_msg_mod.f

libgfsphysf_a-gfs_physics_err_msg_mod.obj: gfs_physics_err_msg_mod.f
	$(AM_V_F77)$(F77) $(libgfsphysf_a_FFLAGS) $(FFLAGS) -c -o libgfsphysf_a-gfs_physics_err_msg_mod.obj `if test -f 'gfs_physics_err_msg_mod.f'; then $(CYGPATH_W) 'gfs_physics_err_msg_mod.f'; else $(CYGPATH_W) '$(srcdir)/gfs_physics_err_msg_mod.f'; fi`

libgfsphysf_a-gfs_physics_finalize_mod.o: gfs_physics_finalize_mod.f
	$(AM_V_F77)$(F77) $(libgfsphysf_a_FFLAGS) $(FFLAGS) -c -o libgfsphysf_a-gfs_physics_finalize_mod.o `test -f 'gfs_physics_finalize_mod.f' || echo '$(srcdir)/'`gfs_physics_finalize_mod.f

libgfsphysf_a-gfs_physics_finalize_mod.obj: gfs_physics_finalize_mod.f
	$(AM_V_F77)$(F77) $(libgfsphysf_a_FFLAGS) $(FFLAGS) -c -o libgfsphysf_a-gfs_physics_finalize_mod.obj `if test -f 'gfs_physics_finalize_mod.f'; then $(CYGPATH_W) 'gfs_physics_finalize_mod.f'; else $(CYGPATH_W) '$(srcdir)/gfs_physics_finalize_mod.f'; fi`

libgfsphysf_a-gfs_physics_g2d_mod.o: gfs_physics_g2d_mod.f
	$(AM_V_F77)$(F77) $(libgfsphysf_a_FFLAGS) $(FFLAGS) -c -o libgfsphysf_a-gfs_physics_g2d_mod.o `test -f 'gfs_physics_g2d_mod.f' || echo '$(srcdir)/'`gfs_physics_g2d_mod.f

libgfsphysf_a-gfs_physics_g2d_mod.obj: gfs_physics_g2d_mod.f
	$(AM_V_F77)$(F77) $(libgfsphysf_a_FFLAGS) $(FFLAGS) -c -o libgfsphysf_a-gfs_physics_g2d_mod.obj `if test -f 'gfs_physics_g2d_mod.f'; then $(CYGPATH_W) 'gfs_physics_g2d_mod.f'; else $(CYGPATH_W) '$(srcdir)/gfs_physics_g2d_mod.f'; fi`

libgfsphysf_a-gfs_physics_g3d_mod.o: gfs_physics_g3d_mod.f
	$(AM_V_F77)$(F77) $(libgfsphysf_a_FFLAGS) $(FFLAGS) -c -o libgfsphysf_a-gfs_physics_g3d_mod.o `test -f 'gfs_physics_g3d_mod.f' || echo '$(srcdir)/'`gfs_physics_g3d_mod.f

libgfsphysf_a-gfs_physics_g3d_mod.obj: gfs_physics_g3d_mod.f
	$(AM_V_F77)$(F77) $(libgfsphysf_a_FFLAGS) $(FFLAGS) -c -o libgfsphysf_a-gfs_physics_g3d_mod.obj `if test -f 'gfs_physics_g3d_mod.f'; then $(CYGPATH_W) 'gfs_physics_g3d_mod.f'; else $(CYGPATH_W) '$(srcdir)/gfs_physics_g3d_mod.f'; fi`

libgfsphysf_a-gfs_physics_getcf_mod.o: gfs_physics_getcf_mod.f
	$(AM_V_F77)$(F77) $(libgfsphysf_a_FFLAGS) $(FFLAGS) -c -o libgfsphysf_a-gfs_physics_getcf_mod.o `test -f 'gfs_physics_getcf_mod.f' || echo '$(srcdir)/'`gfs_physics_getcf_mod.f

libgfsphysf_a-gfs_physics_getcf_mod.obj: gfs_physics_getcf_mod.f
	$(AM_V_F77)$(F77) $(libgfsphysf_a_FFLAGS) $(FFLAGS) -c -o libgfsphysf_a-gfs_physics_getcf_mod.obj `if test -f 'gfs_physics_getcf_mod.f'; then $(CYGPATH_W) 'gfs_physics_getcf_mod.f'; else $(CYGPATH_W) '$(srcdir)/gfs_physics_getcf_mod.f'; fi`

libgfsphysf_a-gfs_physics_grid_comp_mod.o: gfs_physics_grid_comp_mod.f
	$(AM_V_F77)$(F77) $(libgfsphysf_a_FFLAGS) $(FFLAGS) -c -o libgfsphysf_a-gfs_physics_grid_comp_mod.o `test -f 'gfs_physics_grid_comp_mod.f' || echo '$(srcdir)/'`gfs_physics_grid_comp_mod.f

libgfsphysf_a-gfs_physics_grid_comp_mod.obj: gfs_physics_grid_comp_mod.f
	$(AM_V_F77)$(F77) $(libgfsphysf_a_FFLAGS) $(FFLAGS) -c -o libgfsphysf_a-gfs_physics_grid_comp_mod.obj `if test -f 'gfs_physics_grid_comp_mod.f'; then $(CYGPATH_W) 'gfs_physics_grid_comp_mod.f'; else $(CYGPATH_W) '$(srcdir)/gfs_physics_grid_comp_mod.f'; fi`

libgfsphysf_a-gfs_physics_grid_create_mod.o: gfs_physics_grid_create_mod.f
	$(AM_V_F77)$(F77) $(libgfsphysf_a_FFLAGS) $(FFLAGS) -c -o libgfsphysf_a-gfs_physics_grid_create_mod.o `test -f 'gfs_physics_grid_create_mod.f' || echo '$(srcdir)/'`gfs_physics_grid_create_mod.f

libgfsphysf_a-gfs_physics_grid_create_mod.obj: gfs_physics_grid_create_mod.f
	$(AM_V_F77)$(F77) $(libgfsphysf_a_FFLAGS) $(FFLAGS) -c -o libgfsphysf_a-gfs_physics_grid_create_mod.obj `if test -f 'gfs_physics_grid_create_mod.f'; then $(CYGPATH_W) 'gfs_physics_grid_create_mod.f'; else $(CYGPATH_W) '$(srcdir)/gfs_physics_grid_create_mod.f'; fi`

libgfsphysf_a-gfs_physics_gridgr_mod.o: gfs_physics_gridgr_mod.f
	$(AM_V_F77)$(F77) $(libgfsphysf_a_FFLAGS) $(FFLAGS) -c -o libgfsphysf_a-gfs_physics_gridgr_mod.o `test -f 'gfs_physics_gridgr_mod.f' || echo '$(srcdir)/'`gfs_physics_gridgr_mod.f

libgfsphysf_a-gfs_physics_gridgr_mod.obj: gfs_physics_gridgr_mod.f
	$(AM_V_F77)$(F77) $(libgfsphysf_a_FFLAGS) $(FFLAGS) -c -o libgfsphysf_a-gfs_physics_gridgr_mod.obj `if test -f 'gfs_physics_gridgr_mod.f'; then $(CYGPATH_W) 'gfs_physics_gridgr_mod.f'; else $(CYGPATH_W) '$(srcdir)/gfs_physics_gridgr_mod.f'; fi`

libgfsphysf_a-gfs_physics_initialize_mod.o: gfs_physics_initialize_mod.f
	$(AM_V_F77)$(F77) $(libgfsphysf_a_FFLAGS) $(FFLAGS) -c -o libgfsphysf_a-gfs_physics_initialize_mod.o `test -f 'gfs_physics_initialize_mod.f' || echo '$(srcdir)/'`gfs_physics_initialize_mod.f

libgfsphysf_a-gfs_physics_initialize_mod.obj: gfs_physics_initialize_mod.f
	$(AM_V_F77)$(F77) $(libgfsphysf_a_FFLAGS) $(FFLAGS) -c -o libgfsphysf_a-gfs_physics_initialize_mod.obj `if test -f 'gfs_physics_initialize_mod.f'; then $(CYGPATH_W) 'gfs_physics_initialize_mod.f'; else $(CYGPATH_W) '$(srcdir)/gfs_physics_initialize_mod.f'; fi`

libgfsphysf_a-gfs_physics_internal_state_mod.o: gfs_physics_internal_state_mod.f
	$(AM_V_F77)$(F77) $(libgfsphysf_a_FFLAGS) $(FFLAGS) -c -o libgfsphysf_a-gfs_physics_internal_state_mod.o `test -f 'gfs_physics_internal_state_mod.f' || echo '$(srcdir)/'`gfs_physics_internal_state_mod.f

libgfsphysf_a-gfs_physics_internal_state_mod.obj: gfs_physics_internal_state_mod.f
	$(AM_V_F77)$(F77) $(libgfsphysf_a_FFLAGS) $(FFLAGS) -c -o libgfsphysf_a-gfs_physics_internal_state_mod.obj `if test -f 'gfs_physics_internal_state_mod.f'; then $(CYGPATH_W) 'gfs_physics_internal_state_mod.f'; else $(CYGPATH_W) '$(srcdir)/gfs_physics_internal_state_mod.f'; fi`

libgfsphysf_a-gfs_physics_namelist_mod.o: gfs_physics_namelist_mod.f
	$(AM_V_F77)$(F77) $(libgfsphysf_a_FFLAGS) $(FFLAGS) -c -o libgfsphysf_a-gfs_physics_namelist_mod.o `test -f 'gfs_physics_namelist_mod.f' || echo '$(srcdir)/'`gfs_physics_namelist_mod.f

libgfsphysf_a-gfs_physics_namelist_mod.obj: gfs_physics_namelist_mod.f
	$(AM_V_F77)$(F77) $(libgfsphysf_a_FFLAGS) $(FFLAGS) -c -o libgfsphysf_a-gfs_physics_namelist_mod.obj `if test -f 'gfs_physics_namelist_mod.f'; then $(CYGPATH_W) 'gfs_physics_namelist_mod.f'; else $(CYGPATH_W) '$(srcdir)/gfs_physics_namelist_mod.f'; fi`

libgfsphysf_a-gfs_physics_nst_var_mod.o: gfs_physics_nst_var_mod.f
	$(AM_V_F77)$(F77) $(libgfsphysf_a_FFLAGS) $(FFLAGS) -c -o libgfsphysf_a-gfs_physics_nst_var_mod.o `test -f 'gfs_physics_nst_var_mod.f' || echo '$(srcdir)/'`gfs_physics_nst_var_mod.f

libgfsphysf_a-gfs_physics_nst_var_mod.obj: gfs_physics_nst_var_mod.f
	$(AM_V_F77)$(F77) $(libgfsphysf_a_FFLAGS) $(FFLAGS) -c -o libgfsphysf_a-gfs_physics_nst_var_mod.obj `if test -f 'gfs_physics_nst_var_mod.f'; then $(CYGPATH_W) 'gfs_physics_nst_var_mod.f'; else $(CYGPATH_W) '$(srcdir)/gfs_physics_nst_var_mod.f'; fi`

libgfsphysf_a-gfs_physics_output.o: gfs_physics_output.f
	$(AM_V_F77)$(F77) $(libgfsphysf_a_FFLAGS) $(FFLAGS) -c -o libgfsphysf_a-gfs_physics_output.o `test -f 'gfs_physics_output.f' || echo '$(srcdir)/'`gfs_physics_output.f

libgfsphysf_a-gfs_physics_output.obj: gfs_physics_output.f
	$(AM_V_F77)$(F77) $(libgfsphysf_a_FFLAGS) $(FFLAGS) -c -o libgfsphysf_a-gfs_physics_output.obj `if test -f 'gfs_physics_output.f'; then $(CYGPATH_W) 'gfs_physics_output.f'; else $(CYGPATH_W) '$(srcdir)/gfs_physics_output.f'; fi`

libgfsphysf_a-gfs_physics_run_mod.o: gfs_physics_run_mod.f
	$(AM_V_F77)$(F77) $(libgfsphysf_a_FFLAGS) $(FFLAGS) -c -o libgfsphysf_a-gfs_physics_run_mod.o `test -f 'gfs_physics_run_mod.f' || echo '$(srcdir)/'`gfs_physics_run_mod.f

libgfsphysf_a-gfs_physics_run_mod.obj: gfs_physics_run_mod.f
	$(AM_V_F77)$(F77) $(libgfsphysf_a_FFLAGS) $(FFLAGS) -c -o libgfsphysf_a-gfs_physics_run_mod.obj `if test -f 'gfs_physics_run_mod.f'; then $(CYGPATH_W) 'gfs_physics_run_mod.f'; else $(CYGPATH_W) '$(srcdir)/gfs_physics_run_mod.f'; fi`

libgfsphysf_a-gfs_physics_sfc_flx_mod.o: gfs_physics_sfc_flx_mod.f
	$(AM_V_F77)$(F77) $(libgfsphysf_a_FFLAGS) $(FFLAGS) -c -o libgfsphysf_a-gfs_physics_sfc_flx_mod.o `test -f 'gfs_physics_sfc_flx_mod.f' || echo '$(srcdir)/'`gfs_physics_sfc_flx_mod.f

libgfsphysf_a-gfs_physics_sfc_flx_mod.obj: gfs_physics_sfc_flx_mod.f
	$(AM_V_F77)$(F77) $(libgfsphysf_a_FFLAGS) $(FFLAGS) -c -o libgfsphysf_a-gfs_physics_sfc_flx_mod.obj `if test -f 'gfs_physics_sfc_flx_mod.f'; then $(CYGPATH_W) 'gfs_physics_sfc_flx_mod.f'; else $(CYGPATH_W) '$(srcdir)/gfs_physics_sfc_flx_mod.f'; fi`

libgfsphysf_a-gfs_physics_sfc_flx_set_mod.o: gfs_physics_sfc_flx_set_mod.f
	$(AM_V_F77)$(F77) $(libgfsphysf_a_FFLAGS) $(FFLAGS) -c -o libgfsphysf_a-gfs_physics_sfc_flx_set_mod.o `test -f 'gfs_physics_sfc_flx_set_mod.f' || echo '$(srcdir)/'`gfs_physics_sfc_flx_set_mod.f

libgfsphysf_a-gfs_physics_sfc_flx_set_mod.obj: gfs_physics_sfc_flx_set_mod.f
	$(AM_V_F77)$(F77) $(libgfsphysf_a_FFLAGS) $(FFLAGS) -c -o libgfsphysf_a-gfs_physics_sfc_flx_set_mod.obj `if test -f 'gfs_physics_sfc_flx_set_mod.f'; then $(CYGPATH_W) 'gfs_physics_sfc_flx_set_mod.f'; else $(CYGPATH_W) '$(srcdir)/gfs_physics_sfc_flx_set_mod.f'; fi`

libgfsphysf_a-gfs_physics_start_time_get_mod.o: gfs_physics_start_time_get_mod.f
	$(AM_V_F77)$(F77) $(libgfsphysf_a_FFLAGS) $(FFLAGS) -c -o libgfsphysf_a-gfs_physics_start_time_get_mod.o `test -f 'gfs_physics_start_time_get_mod.f' || echo '$(srcdir)/'`gfs_physics_start_time_get_mod.f

libgfsphysf_a-gfs_physics_start_time_get_mod.obj: gfs_physics_start_time_get_mod.f
	$(AM_V_F77)$(F77) $(libgfsphysf_a_FFLAGS) $(FFLAGS) -c -o libgfsphysf_a-gfs_physics_start_time_get_mod.obj `if test -f 'gfs_physics_start_time_get_mod.f'; then $(CYGPATH_W) 'gfs_physics_start_time_get_mod.f'; else $(CYGPATH_W) '$(srcdir)/gfs_physics_start_time_get_mod.f'; fi`

libgfsphysf_a-gfs_phy_states_mod.o: gfs_phy_states_mod.f
	$(AM_V_F77)$(F77) $(libgfsphysf_a_FFLAGS) $(FFLAGS) -c -o libgfsphysf_a-gfs_phy_states_mod.o `test -f 'gfs_phy_states_mod.f' || echo '$(srcdir)/'`gfs_phy_states_mod.f

libgfsphysf_a-gfs_phy_states_mod.obj: gfs_phy_states_mod.f
	$(AM_V_F77)$(F77) $(libgfsphysf_a_FFLAGS) $(FFLAGS) -c -o libgfsphysf_a-gfs_phy_states_mod.obj `if test -f 'gfs_phy_states_mod.f'; then $(CYGPATH_W) 'gfs_phy_states_mod.f'; else $(CYGPATH_W) '$(srcdir)/gfs_phy_states_mod.f'; fi`

libgfsphysf_a-nstio_module.o: nstio_module.f
	$(AM_V_F77)$(F77) $(libgfsphysf_a_FFLAGS) $(FFLAGS) -c -o libgfsphysf_a-nstio_module.o `test -f 'nstio_module.f' || echo '$(srcdir)/'`nstio_module.f

libgfsphysf_a-nstio_module.obj: nstio_module.f
	$(AM_V_F77)$(F77) $(libgfsphysf_a_FFLAGS) $(FFLAGS) -c -o libgfsphysf_a-nstio_module.obj `if test -f 'nstio_module.f'; then $(CYGPATH_W) 'nstio_module.f'; else $(CYGPATH_W) '$(srcdir)/nstio_module.f'; fi`

libgfsphysf_a-sfcio_module.o: sfcio_module.f
	$(AM_V_F77)$(F77) $(libgfsphysf_a_FFLAGS) $(FFLAGS) -c -o libgfsphysf_a-sfcio_module.o `test -f 'sfcio_module.f' || echo '$(srcdir)/'`sfcio_module.f

libgfsphysf_a-sfcio_module.obj: sfcio_module.f
	$(AM_V_F77)$(F77) $(libgfsphysf_a_FFLAGS) $(FFLAGS) -c -o libgfsphysf_a-sfcio_module.obj `if test -f 'sfcio_module.f'; then $(CYGPATH_W) 'sfcio_module.f'; else $(CYGPATH_W) '$(srcdir)/sfcio_module.f'; fi`

libgfsphysf_a-wam_ifp_class.o: wam_ifp_class.f
	$(AM_V_F77)$(F77) $(libgfsphysf_a_FFLAGS) $(FFLAGS) -c -o libgfsphysf_a-wam_ifp_class.o `test -f 'wam_ifp_class.f' || echo '$(srcdir)/'`wam_ifp_class.f

libgfsphysf_a-wam_ifp_class.obj: wam_ifp_class.f
	$(AM_V_F77)$(F77) $(libgfsphysf_a_FFLAGS) $(FFLAGS) -c -o libgfsphysf_a-wam_ifp_class.obj `if test -f 'wam_ifp_class.f'; then $(CYGPATH_W) 'wam_ifp_class.f'; else $(CYGPATH_W) '$(srcdir)/wam_ifp_class.f'; fi`

libgfsphysf_a-wam_ifp_mod.o: wam_ifp_mod.f
	$(AM_V_F77)$(F77) $(libgfsphysf_a_FFLAGS) $(FFLAGS) -c -o libgfsphysf_a-wam_ifp_mod.o `test -f 'wam_ifp_mod.f' || echo '$(srcdir)/'`wam_ifp_mod.f

libgfsphysf_a-wam_ifp_mod.obj: wam_ifp_mod.f
	$(AM_V_F77)$(F77) $(libgfsphysf_a_FFLAGS) $(FFLAGS) -c -o libgfsphysf_a-wam_ifp_mod.obj `if test -f 'wam_ifp_mod.f'; then $(CYGPATH_W) 'wam_ifp_mod.f'; else $(CYGPATH_W) '$(srcdir)/wam_ifp_mod.f'; fi`

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-local clean-noinstLIBRARIES \
	mostlyclean-am

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean clean-generic \
	clean-local clean-noinstLIBRARIES cscopelist-am ctags ctags-am \
	distclean distclean-compile distclean-generic distclean-tags \
	distdir dvi dvi-am html html-am info info-am install \
	install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am

.PRECIOUS: Makefile


.PHONY: clean-modules

clean-modules:
	-test -z "$(FC_MODEXT)" || rm -f *.$(FC_MODEXT)

clean-local: clean-modules

# dependencies
#
# - gfsphys
#
libgfsphys_a-aoicpl_prep.$(OBJEXT) : libgfsphys_a-namelist_physics_def.$(OBJEXT) \
	libgfsphys_a-resol_def.$(OBJEXT) libgfsphysf_a-gfs_physics_aoi_var_mod.$(OBJEXT) \
	libgfsphys_a-mpi_def.$(OBJEXT) libgfsphys_a-layout1.$(OBJEXT)
libgfsphys_a-compns_physics.$(OBJEXT) : libgfsphys_a-namelist_physics_def.$(OBJEXT) \
	libgfsphys_a-mpi_def.$(OBJEXT) libgfsphysf_a-wam_ifp_mod.$(OBJEXT)
libgfsphys_a-dfi_fixwr.$(OBJEXT) : libgfsphysf_a-gfs_physics_sfc_flx_mod.$(OBJEXT) \
	libgfsphys_a-namelist_physics_def.$(OBJEXT) libgfsphys_a-resol_def.$(OBJEXT) \
	libgfsphysf_a-gfs_physics_nst_var_mod.$(OBJEXT) libgfsphys_a-layout1.$(OBJEXT)
libgfsphys_a-do_physics_one_step.$(OBJEXT) : libgfsphys_a-namelist_physics_def.$(OBJEXT) \
	libgfsphys_a-resol_def.$(OBJEXT) libgfsphysf_a-gfs_physics_g2d_mod.$(OBJEXT) \
	libgfsphysf_a-gfs_physics_sfc_flx_set_mod.$(OBJEXT) libgfsphys_a-mpi_def.$(OBJEXT) \
	libgfsphys_a-d3d_def.$(OBJEXT) libgfsphysf_a-gfs_physics_sfc_flx_mod.$(OBJEXT) \
	libgfsphysf_a-gfs_physics_gridgr_mod.$(OBJEXT) libgfsphysf_a-gfs_physics_aoi_var_mod.$(OBJEXT) \
	libgfsphysf_a-gfs_physics_nst_var_mod.$(OBJEXT) libgfsphys_a-vert_def.$(OBJEXT) \
	libgfsphysf_a-gfs_physics_g3d_mod.$(OBJEXT) libgfsphys_a-layout1.$(OBJEXT) \
	libgfsphysf_a-wam_ifp_class.$(OBJEXT)
libgfsphys_a-fix_fields.$(OBJEXT) : libgfsphys_a-namelist_physics_def.$(OBJEXT) \
	libgfsphys_a-resol_def.$(OBJEXT) libgfsphysf_a-gfs_physics_sfc_flx_mod.$(OBJEXT) \
	libgfsphysf_a-gfs_physics_nst_var_mod.$(OBJEXT) libgfsphys_a-layout1.$(OBJEXT) libgfsphys_a-gg_def.$(OBJEXT)
libgfsphys_a-fix_fields_idea_rst.$(OBJEXT) : libgfsphys_a-namelist_physics_def.$(OBJEXT) \
	libgfsphys_a-resol_def.$(OBJEXT) libgfsphysf_a-gfs_physics_sfc_flx_mod.$(OBJEXT) \
	libgfsphysf_a-gfs_physics_nst_var_mod.$(OBJEXT) libgfsphys_a-layout1.$(OBJEXT) libgfsphys_a-gg_def.$(OBJEXT)
libgfsphys_a-fld_collect.$(OBJEXT) : libgfsphys_a-resol_def.$(OBJEXT) \
	libgfsphys_a-mpi_def.$(OBJEXT) libgfsphysf_a-gfs_physics_sfc_flx_mod.$(OBJEXT) libgfsphys_a-layout1.$(OBJEXT)
libgfsphys_a-fld_collect_nst.$(OBJEXT) : libgfsphys_a-resol_def.$(OBJEXT) \
	libgfsphys_a-mpi_def.$(OBJEXT) libgfsphysf_a-gfs_physics_nst_var_mod.$(OBJEXT) libgfsphys_a-layout1.$(OBJEXT)
libgfsphys_a-gbphys_adv_hyb_gc.$(OBJEXT) : libgfsphys_a-coordinate_def.$(OBJEXT) libgfsphys_a-resol_def.$(OBJEXT)
libgfsphys_a-gbphys_adv_hyb_gc_h.$(OBJEXT) : libgfsphys_a-coordinate_def.$(OBJEXT) libgfsphys_a-resol_def.$(OBJEXT)
libgfsphys_a-gcycle.$(OBJEXT) : libgfsphys_a-namelist_physics_def.$(OBJEXT) \
	libgfsphys_a-resol_def.$(OBJEXT) libgfsphysf_a-gfs_physics_sfc_flx_mod.$(OBJEXT)
libgfsphys_a-getcon_physics.$(OBJEXT) : libgfsphys_a-namelist_physics_def.$(OBJEXT) \
	libgfsphys_a-resol_def.$(OBJEXT) libgfsphys_a-layout1.$(OBJEXT) libgfsphys_a-gg_def.$(OBJEXT)
libgfsphys_a-get_lats_node_shuff_r_fix.$(OBJEXT) : libgfsphys_a-resol_def.$(OBJEXT) libgfsphys_a-layout1.$(OBJEXT)
libgfsphys_a-GFS_simple_scatter.$(OBJEXT) : libgfsphys_a-resol_def.$(OBJEXT) libgfsphys_a-layout1.$(OBJEXT)
libgfsphys_a-gloopb.$(OBJEXT) : libgfsphys_a-namelist_physics_def.$(OBJEXT) libgfsphysf_a-gfs_physics_gridgr_mod.$(OBJEXT) \
	libgfsphysf_a-gfs_physics_nst_var_mod.$(OBJEXT) libgfsphys_a-coordinate_def.$(OBJEXT) \
	libgfsphys_a-resol_def.$(OBJEXT) libgfsphys_a-mpi_def.$(OBJEXT) libgfsphys_a-d3d_def.$(OBJEXT) \
	libgfsphysf_a-gfs_physics_sfc_flx_mod.$(OBJEXT) libgfsphysf_a-gfs_physics_aoi_var_mod.$(OBJEXT) \
	libgfsphys_a-vert_def.$(OBJEXT) libgfsphysf_a-gfs_physics_g3d_mod.$(OBJEXT) libgfsphys_a-layout1.$(OBJEXT) \
	libgfsphys_a-gg_def.$(OBJEXT) libgfsphysf_a-wam_ifp_class.$(OBJEXT)
libgfsphys_a-gloopr.$(OBJEXT) : libgfsphys_a-namelist_physics_def.$(OBJEXT) \
	libgfsphysf_a-gfs_physics_gridgr_mod.$(OBJEXT) libgfsphys_a-resol_def.$(OBJEXT) \
	libgfsphys_a-d3d_def.$(OBJEXT) libgfsphysf_a-gfs_physics_aoi_var_mod.$(OBJEXT) \
	libgfsphysf_a-gfs_physics_g3d_mod.$(OBJEXT) libgfsphys_a-layout1.$(OBJEXT) libgfsphys_a-gg_def.$(OBJEXT)
libgfsphys_a-gribit_gsm.$(OBJEXT) : libgfsphys_a-namelist_physics_def.$(OBJEXT)
libgfsphys_a-info.$(OBJEXT) : libgfsphys_a-resol_def.$(OBJEXT) libgfsphys_a-layout1.$(OBJEXT)
libgfsphys_a-lats_shuff.$(OBJEXT) : libgfsphys_a-resol_def.$(OBJEXT) libgfsphys_a-layout1.$(OBJEXT)
libgfsphys_a-lon_lat_para.$(OBJEXT) : libgfsphys_a-resol_def.$(OBJEXT) libgfsphys_a-layout1.$(OBJEXT) libgfsphys_a-gg_def.$(OBJEXT)
libgfsphys_a-mpi_quit.$(OBJEXT) : libgfsphys_a-mpi_def.$(OBJEXT)
libgfsphys_a-para_fixio_w.$(OBJEXT) : libgfsphys_a-resol_def.$(OBJEXT) libgfsphysf_a-gfs_physics_sfc_flx_mod.$(OBJEXT) \
	libgfsphys_a-layout1.$(OBJEXT)
libgfsphys_a-para_nst_w.$(OBJEXT) : libgfsphysf_a-gfs_physics_nst_var_mod.$(OBJEXT) libgfsphys_a-resol_def.$(OBJEXT) \
	libgfsphys_a-layout1.$(OBJEXT)
libgfsphys_a-read_fix.$(OBJEXT) : libgfsphys_a-namelist_physics_def.$(OBJEXT) libgfsphys_a-mod_state.$(OBJEXT) \
	libgfsphysf_a-sfcio_module.$(OBJEXT) libgfsphysf_a-gfs_physics_nst_var_mod.$(OBJEXT) libgfsphysf_a-nstio_module.$(OBJEXT) \
	libgfsphys_a-coordinate_def.$(OBJEXT) libgfsphys_a-resol_def.$(OBJEXT) libgfsphys_a-mpi_def.$(OBJEXT) \
	libgfsphysf_a-gfs_physics_sfc_flx_mod.$(OBJEXT) libgfsphys_a-layout1.$(OBJEXT)
libgfsphys_a-setlats.$(OBJEXT) : libgfsphys_a-resol_def.$(OBJEXT) libgfsphys_a-layout1.$(OBJEXT)
libgfsphys_a-setlats_r_slg.$(OBJEXT) : libgfsphys_a-resol_def.$(OBJEXT) libgfsphys_a-layout1.$(OBJEXT)
libgfsphys_a-wrt3d.$(OBJEXT) : libgfsphys_a-namelist_physics_def.$(OBJEXT) libgfsphys_a-resol_def.$(OBJEXT) \
	libgfsphys_a-d3d_def.$(OBJEXT) libgfsphys_a-layout1.$(OBJEXT)
libgfsphys_a-wrt3d_hyb.$(OBJEXT) : libgfsphys_a-namelist_physics_def.$(OBJEXT) libgfsphys_a-resol_def.$(OBJEXT) \
	libgfsphys_a-d3d_def.$(OBJEXT) libgfsphys_a-layout1.$(OBJEXT)
libgfsphys_a-wrtout_physics.$(OBJEXT) : libgfsphys_a-namelist_physics_def.$(OBJEXT) libgfsphys_a-mod_state.$(OBJEXT) \
	libgfsphysf_a-sfcio_module.$(OBJEXT) libgfsphysf_a-nstio_module.$(OBJEXT) libgfsphysf_a-gfs_physics_nst_var_mod.$(OBJEXT) \
	libgfsphysf_a-gfs_physics_output.$(OBJEXT) libgfsphys_a-resol_def.$(OBJEXT) libgfsphysf_a-gfs_physics_g2d_mod.$(OBJEXT) \
	libgfsphys_a-mpi_def.$(OBJEXT) libgfsphysf_a-gfs_physics_sfc_flx_mod.$(OBJEXT) libgfsphys_a-layout1.$(OBJEXT)
#
# - gfsphysf
#
libgfsphysf_a-checkiauforcing.$(OBJEXT) : libgfsphys_a-namelist_physics_def.$(OBJEXT)
libgfsphysf_a-gfs_physics_finalize_mod.$(OBJEXT) : libgfsphysf_a-gfs_physics_internal_state_mod.$(OBJEXT)
libgfsphysf_a-gfs_physics_getcf_mod.$(OBJEXT) : libgfsphysf_a-gfs_physics_err_msg_mod.$(OBJEXT) \
	libgfsphysf_a-gfs_physics_internal_state_mod.$(OBJEXT)
libgfsphysf_a-gfs_physics_grid_comp_mod.$(OBJEXT) : libgfsphys_a-namelist_physics_def.$(OBJEXT) \
	libgfsphys_a-resol_def.$(OBJEXT) libgfsphys_a-mpi_def.$(OBJEXT) libgfsphysf_a-gfs_physics_finalize_mod.$(OBJEXT) \
	libgfsphysf_a-gfs_physics_initialize_mod.$(OBJEXT) libgfsphysf_a-gfs_physics_err_msg_mod.$(OBJEXT) \
	libgfsphysf_a-gfs_phy_states_mod.$(OBJEXT) libgfsphysf_a-gfs_physics_internal_state_mod.$(OBJEXT) \
	libgfsphysf_a-gfs_physics_getcf_mod.$(OBJEXT) libgfsphysf_a-gfs_physics_run_mod.$(OBJEXT) \
	libgfsphysf_a-gfs_physics_grid_create_mod.$(OBJEXT) libgfsphysf_a-gfs_physics_output.$(OBJEXT) libgfsphys_a-layout1.$(OBJEXT)
libgfsphysf_a-gfs_physics_grid_create_mod.$(OBJEXT) : libgfsphysf_a-gfs_physics_internal_state_mod.$(OBJEXT)
libgfsphysf_a-gfs_physics_initialize_mod.$(OBJEXT) : libgfsphys_a-namelist_physics_def.$(OBJEXT) \
	libgfsphysf_a-gfs_physics_sfc_flx_set_mod.$(OBJEXT) libgfsphys_a-mod_state.$(OBJEXT) \
	libgfsphysf_a-gfs_physics_gridgr_mod.$(OBJEXT) libgfsphysf_a-sfcio_module.$(OBJEXT) \
	libgfsphysf_a-gfs_physics_nst_var_mod.$(OBJEXT) libgfsphys_a-coordinate_def.$(OBJEXT) \
	libgfsphys_a-resol_def.$(OBJEXT) libgfsphysf_a-gfs_physics_g2d_mod.$(OBJEXT) \
	libgfsphys_a-mpi_def.$(OBJEXT) libgfsphysf_a-gfs_physics_internal_state_mod.$(OBJEXT) \
	libgfsphys_a-d3d_def.$(OBJEXT) libgfsphysf_a-gfs_physics_aoi_var_mod.$(OBJEXT) \
	libgfsphys_a-vert_def.$(OBJEXT) libgfsphysf_a-gfs_physics_g3d_mod.$(OBJEXT) \
	libgfsphys_a-layout1.$(OBJEXT) libgfsphys_a-gg_def.$(OBJEXT) libgfsphysf_a-wam_ifp_mod.$(OBJEXT)
libgfsphysf_a-gfs_physics_internal_state_mod.$(OBJEXT) : libgfsphysf_a-gfs_physics_gridgr_mod.$(OBJEXT) \
	libgfsphysf_a-gfs_physics_nst_var_mod.$(OBJEXT) libgfsphysf_a-gfs_physics_g2d_mod.$(OBJEXT) \
	libgfsphysf_a-gfs_physics_sfc_flx_mod.$(OBJEXT) libgfsphysf_a-gfs_physics_namelist_mod.$(OBJEXT) \
	libgfsphysf_a-gfs_physics_aoi_var_mod.$(OBJEXT) libgfsphysf_a-gfs_physics_g3d_mod.$(OBJEXT) \
	libgfsphysf_a-wam_ifp_class.$(OBJEXT)
libgfsphysf_a-gfs_physics_output.$(OBJEXT) : libgfsphys_a-namelist_physics_def.$(OBJEXT) \
	libgfsphys_a-mod_state.$(OBJEXT) libgfsphys_a-coordinate_def.$(OBJEXT) libgfsphys_a-resol_def.$(OBJEXT) \
	libgfsphysf_a-gfs_physics_err_msg_mod.$(OBJEXT) libgfsphysf_a-gfs_physics_internal_state_mod.$(OBJEXT)
libgfsphysf_a-gfs_physics_run_mod.$(OBJEXT) : libgfsphys_a-namelist_physics_def.$(OBJEXT) \
	libgfsphys_a-resol_def.$(OBJEXT) libgfsphysf_a-gfs_physics_internal_state_mod.$(OBJEXT) \
	libgfsphys_a-layout1.$(OBJEXT) libgfsphysf_a-wam_ifp_mod.$(OBJEXT)
libgfsphysf_a-gfs_physics_sfc_flx_set_mod.$(OBJEXT) : libgfsphysf_a-gfs_physics_sfc_flx_mod.$(OBJEXT)
libgfsphysf_a-gfs_physics_start_time_get_mod.$(OBJEXT) : libgfsphysf_a-sfcio_module.$(OBJEXT)
libgfsphysf_a-gfs_phy_states_mod.$(OBJEXT) : libgfsphys_a-namelist_physics_def.$(OBJEXT) \
	libgfsphysf_a-gfs_physics_grid_create_mod.$(OBJEXT) libgfsphysf_a-gfs_physics_g2d_mod.$(OBJEXT) \
	libgfsphysf_a-gfs_physics_err_msg_mod.$(OBJEXT) libgfsphysf_a-gfs_physics_internal_state_mod.$(OBJEXT) \
	libgfsphysf_a-gfs_physics_namelist_mod.$(OBJEXT) libgfsphysf_a-gfs_physics_add_get_state_ESMFField_mod.$(OBJEXT) \
	libgfsphys_a-gg_def.$(OBJEXT)
libgfsphysf_a-wam_ifp_mod.$(OBJEXT) : libgfsphys_a-mpi_def.$(OBJEXT) libgfsphysf_a-wam_ifp_class.$(OBJEXT) \
	libgfsphys_a-layout1.$(OBJEXT)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
